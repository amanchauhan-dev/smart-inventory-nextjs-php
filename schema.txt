model User {
    id       String @id @default(uuid())
    name     String
    email    String @unique
    password String

    budgets    Budget[]
    categories Category[]
    expenses   Expense[]
    products   Product[]
    createdAt  DateTime   @default(now())
}

model Budget {
    id           String   @id @default(uuid())
    userId       String
    name         String
    budgetAmount Float
    amountSpent  Float    @default(0)
    warningLvl   Float?
    description  String?
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    user       User       @relation(fields: [userId], references: [id])
    categories Category[]
    products   Product[]
}

model Category {
    id        String   @id @default(uuid())
    budgetId  String
    userId    String
    name      String
    limit     Float
    spent     Float    @default(0)
    createdAt DateTime @default(now())

    user     User      @relation(fields: [userId], references: [id])
    budget   Budget    @relation(fields: [budgetId], references: [id])
    expenses Expense[]
}

model Expense {
    id          String   @id @default(uuid())
    userId      String
    categoryId  String
    title       String
    description String?
    amount      Float
    invoiceURL  String?
    tags        String[]
    date        DateTime @default(now())

    user     User     @relation(fields: [userId], references: [id])
    category Category @relation(fields: [categoryId], references: [id])
}

model Product {
    id          String   @id @default(uuid())
    userId      String
    budgetId    String
    title       String
    description String?
    category    String
    stock       Int
    threshold   Int      @default(0) // For low stock alert
    price       Float
    supplier    String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    user   User   @relation(fields: [userId], references: [id])
    budget Budget @relation(fields: [budgetId], references: [id])
}
